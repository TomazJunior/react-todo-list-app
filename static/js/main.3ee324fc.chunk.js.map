{"version":3,"sources":["components/NewTodoItem.js","components/TodoItem.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["NewTodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","description","formValid","handleSubmit","bind","assertThisInitialized","handleDescriptionTextChange","handleTitleTextChange","e","setState","target","value","_validateData","react_default","a","createElement","onSubmit","className","htmlFor","name","onChange","disabled","type","item","objectSpread","id","uuid","v4","onAddItem","_resetFields","_isFormValid","preventDefault","Component","TodoItem","dragStart","handleDragStart","handleDragOver","handleDragEnter","handleDragLeave","handleDrop","handleDragEnd","todoItem","console","log","dataTransfer","setData","dropEffect","over","callback","stopPropagation","droppedItemId","parseInt","getData","_this2","onRemoveItem","onDropItem","todoItemClasses","push","draggable","join","onDragStart","onDragOver","onDragEnter","onDragLeave","onDrop","onDragEnd","onClick","TodoList","items","addItemHandle","removeItemHandle","dropItemHandle","concat","filter","droppedOnItemId","toPosition","findIndex","fromPosition","splice","todoItems","map","TodoItem_TodoItem","key","NewTodoItem_NewTodoItem","App","toastr","options","positionClass","hideDuration","timeOut","clear","TodoList_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ee324fc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport uuid from \"uuid\";\r\nimport \"./NewTodoItem.css\";\r\n\r\nexport default class NewTodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: '',\r\n      description: '',\r\n      formValid: false\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleDescriptionTextChange = this.handleDescriptionTextChange.bind(this);\r\n    this.handleTitleTextChange = this.handleTitleTextChange.bind(this);\r\n  }\r\n\r\n  handleDescriptionTextChange(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n    this._validateData();\r\n  }\r\n\r\n  handleTitleTextChange(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n    this._validateData();\r\n  }\r\n\r\n  _resetFields() {\r\n    this.setState({\r\n      description: '',\r\n      title: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const description = this.state.description;\r\n    const title = this.state.title;\r\n    return (  \r\n      <form onSubmit={this.handleSubmit}>\r\n        <fieldset>\r\n          <legend>Add New Item</legend>\r\n          <p>\r\n            <label className=\"field\" htmlFor=\"Title\"><span>*</span>Title:</label>\r\n            <input\r\n              name=\"Title\"\r\n              value={title} \r\n              onChange={this.handleTitleTextChange}\r\n            />\r\n          </p>\r\n          <p>\r\n            <label className=\"field\" htmlFor=\"Description\"><span>*</span>Description:</label>\r\n            <input\r\n              name=\"Description\"\r\n              value={description} \r\n              onChange={this.handleDescriptionTextChange}\r\n            />\r\n          </p>\r\n          <button disabled={!this.state.formValid} type=\"submit\">Add</button>\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    const item = {\r\n      id: uuid.v4(),\r\n      ...this.state\r\n    };\r\n    this.props.onAddItem(item);\r\n    this._resetFields();\r\n    this._isFormValid(false);\r\n    e.preventDefault();\r\n  }\r\n\r\n  _isFormValid(formValid) {\r\n    this.setState({\r\n      formValid\r\n    });\r\n  }\r\n  _validateData() {\r\n    if (!this.state.title || !this.state.description) { \r\n      this._isFormValid(false);\r\n    } else {\r\n      this._isFormValid(true);\r\n    }\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport './TodoItem.css';\r\n\r\nexport default class TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dragStart: false\r\n    }\r\n    this.handleDragStart = this.handleDragStart.bind(this);\r\n    this.handleDragOver = this.handleDragOver.bind(this);\r\n    this.handleDragEnter = this.handleDragEnter.bind(this);\r\n    this.handleDragLeave = this.handleDragLeave.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleDragEnd = this.handleDragEnd.bind(this);\r\n  }\r\n\r\n  handleDragStart(e, todoItem) {\r\n    console.log('handleDragStart', todoItem.id);\r\n    this.setState({\r\n      dragStart: true\r\n    });\r\n    e.dataTransfer.setData('id', todoItem.id);\r\n  }\r\n\r\n  handleDragOver(e) {\r\n    if (e.preventDefault) {\r\n      e.preventDefault();\r\n    }\r\n    e.dataTransfer.dropEffect = 'move';\r\n    return false;\r\n  }\r\n\r\n  handleDragEnter() {\r\n    this.setState({\r\n      over: true\r\n    })\r\n  }\r\n  \r\n  handleDragLeave() {\r\n    this.setState({\r\n      over: false\r\n    })\r\n  }\r\n\r\n  handleDrop(e, todoItem, callback) {\r\n    if (e.stopPropagation) {\r\n      e.stopPropagation();\r\n    }\r\n    const droppedItemId = parseInt(e.dataTransfer.getData('id'));\r\n\r\n    if (todoItem.id !== droppedItemId && callback) { \r\n      callback(droppedItemId, todoItem.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleDragEnd(e) {\r\n    this.setState({\r\n      dragStart: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const todoItem = this.props.todoItem;\r\n    const onRemoveItem = this.props.onRemoveItem;\r\n    const onDropItem = this.props.onDropItem;\r\n    const todoItemClasses = ['TodoItem'];\r\n    \r\n    this.state.dragStart && todoItemClasses.push('dragStart');\r\n    this.state.over && todoItemClasses.push('over');\r\n\r\n    return (\r\n      <li \r\n      draggable className={todoItemClasses.join(' ')}\r\n      onDragStart={(e) => this.handleDragStart(e, todoItem)}\r\n      onDragOver={this.handleDragOver}\r\n      onDragEnter={this.handleDragEnter}\r\n      onDragLeave={this.handleDragLeave}\r\n      onDrop={(e) => this.handleDrop(e, todoItem, onDropItem)}\r\n      onDragEnd={this.handleDragEnd}\r\n      >\r\n\r\n        <span onClick={() => onRemoveItem(todoItem.id)} className=\"TodoClose\">x</span>\r\n        <h4><b>{todoItem.title}</b></h4>\r\n        <p>{todoItem.description}</p> \r\n      </li>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport NewTodoItem from \"./NewTodoItem\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport './TodoList.css';\r\n\r\nexport default class TodoList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      items: []\r\n    }\r\n    this.addItemHandle = this.addItemHandle.bind(this);\r\n    this.removeItemHandle = this.removeItemHandle.bind(this);\r\n    this.dropItemHandle = this.dropItemHandle.bind(this);\r\n  }\r\n\r\n  addItemHandle(item) {\r\n    this.setState({\r\n      items: this.state.items.concat([item])\r\n    });\r\n  }\r\n    \r\n  removeItemHandle(id) {\r\n    this.setState({\r\n      items: this.state.items.filter((item) => item.id !== id)\r\n    });\r\n  }\r\n\r\n  dropItemHandle(droppedItemId, droppedOnItemId) {\r\n    const toPosition = this.state.items.findIndex((item) => item.id === droppedOnItemId);\r\n    const fromPosition = this.state.items.findIndex((item) => item.id === droppedItemId);\r\n    this.state.items.splice(toPosition, 0, this.state.items.splice(fromPosition, 1)[0]);\r\n    this.setState({\r\n      items: [].concat(this.state.items)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const todoItems = this.state.items.map((todoItem) => \r\n      <TodoItem onDropItem={this.dropItemHandle} onRemoveItem={this.removeItemHandle} key={todoItem.id} todoItem={todoItem}></TodoItem>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"TodoList-header\">\r\n          <h2>ToDo List App</h2>\r\n        </div>\r\n        <div className=\"TodoList-body\">\r\n          <NewTodoItem onAddItem={this.addItemHandle}></NewTodoItem>\r\n          <div>\r\n            <h3>Items</h3>\r\n            <ul className=\"TodoList-container\">\r\n              {todoItems}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport TodoList from \"./components/TodoList\";\nimport toastr from 'toastr'\nimport 'toastr/build/toastr.min.css'\n\nclass App extends Component {\n  constructor() {\n    super();\n    toastr.options = {\n      positionClass : 'toast-top-full-width',\n      hideDuration: 300,\n      timeOut: 10000\n    }\n    toastr.clear();\n  }\n\n  render() {\n    return (\n      <div>\n        <TodoList></TodoList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}