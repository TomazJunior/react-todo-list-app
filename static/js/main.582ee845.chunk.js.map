{"version":3,"sources":["components/StatusTodoItem.js","components/EditTodoItem.js","components/ModalDialog.js","components/TileTodoItem.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["StatusTodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","event","setState","target","onChange","react_default","a","createElement","name","Component","EditTodoItem","todoItem","objectSpread","formValid","title","description","status","handleSubmit","handleDescriptionTextChange","handleTitleTextChange","handleStatusChange","e","_validateData","formTitle","onSubmit","className","htmlFor","StatusTodoItem_StatusTodoItem","disabled","type","item","id","uuid","v4","onSubmitItem","_resetFields","_isFormValid","preventDefault","ModalDialog","handleClose","onClose","_this2","children","open","onClick","TileTodoItem","dragStart","showModal","handleDragStart","handleDragOver","handleDragEnter","handleDragLeave","handleDrop","handleDragEnd","handleEditItem","handleSubmitEditItem","console","log","dataTransfer","setData","dropEffect","over","callback","stopPropagation","droppedItemId","parseInt","getData","handleCloseEditItem","onRemoveItem","onDropItem","onEditItem","todoItemClasses","push","Fragment","ModalDialog_ModalDialog","EditTodoItem_EditTodoItem","draggable","join","onDragStart","onDragOver","onDragEnter","onDragLeave","onDrop","onDragEnd","TodoList","items","addItemHandle","removeItemHandle","dropItemHandle","editItemHandle","concat","todoItemPosition","findIndex","splice","filter","droppedOnItemId","toPosition","fromPosition","todoItems","map","TileTodoItem_TileTodoItem","key","App","toastr","options","positionClass","hideDuration","timeOut","clear","TodoList_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.582ee845.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport default class StatusTodoItem extends Component{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: 'open'};\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n    this.props.onChange(event);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <select name='Status' value={this.state.value} onChange={this.handleChange}>\r\n        <option value=\"open\">Open</option>\r\n        <option value=\"close\">Close</option>\r\n      </select>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport uuid from \"uuid\";\r\nimport \"./EditTodoItem.css\";\r\nimport StatusTodoItem from './StatusTodoItem';\r\n\r\nexport default class EditTodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.todoItem) {\r\n      this.state = {\r\n        ...props.todoItem,\r\n        formValid: true\r\n      };\r\n    } else {\r\n      this.state = {\r\n        title: '',\r\n        description: '',\r\n        status: 'open'\r\n      };\r\n    }\r\n    \r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleDescriptionTextChange = this.handleDescriptionTextChange.bind(this);\r\n    this.handleTitleTextChange = this.handleTitleTextChange.bind(this);\r\n    this.handleStatusChange = this.handleStatusChange.bind(this);\r\n  }\r\n\r\n  handleDescriptionTextChange(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n    this._validateData();\r\n  }\r\n\r\n  handleTitleTextChange(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n    this._validateData();\r\n  }\r\n\r\n  handleStatusChange(e) {\r\n    this.setState({\r\n      status: e.target.value\r\n    });\r\n    this._validateData();\r\n  }\r\n\r\n  _resetFields() {\r\n    this.setState({\r\n      description: '',\r\n      title: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const description = this.state.description;\r\n    const title = this.state.title;\r\n    const formTitle = this.props.formTitle;\r\n    return (  \r\n      <form onSubmit={this.handleSubmit}>\r\n        <fieldset>\r\n          <legend>{formTitle}</legend>\r\n          <p>\r\n            <label className=\"field\" htmlFor=\"Title\"><span>*</span>Title:</label>\r\n            <input\r\n              name=\"Title\"\r\n              value={title} \r\n              onChange={this.handleTitleTextChange}\r\n            />\r\n          </p>\r\n          <p>\r\n            <label className=\"field\" htmlFor=\"Description\"><span>*</span>Description:</label>\r\n            <input\r\n              name=\"Description\"\r\n              value={description} \r\n              onChange={this.handleDescriptionTextChange}\r\n            />\r\n          </p>\r\n          <p>\r\n            <label className=\"field\" htmlFor='Status'><span>*</span>Status:</label>\r\n            <StatusTodoItem onChange={this.handleStatusChange}></StatusTodoItem>\r\n          </p>\r\n          <button disabled={!this.state.formValid} type=\"submit\">Save</button>\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    const item = {\r\n      id: uuid.v4(),\r\n      ...this.state\r\n    };\r\n    this.props.onSubmitItem(item);\r\n    this._resetFields();\r\n    this._isFormValid(false);\r\n    e.preventDefault();\r\n  }\r\n\r\n  _isFormValid(formValid) {\r\n    this.setState({\r\n      formValid\r\n    });\r\n  }\r\n\r\n  _validateData() {\r\n    if (!this.state.title || !this.state.description || !this.state.status) { \r\n      this._isFormValid(false);\r\n    } else {\r\n      this._isFormValid(true);\r\n    }\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport './ModalDialog.css';\r\nexport default class ModalDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  handleClose(onClose) {\r\n    onClose();\r\n  }\r\n\r\n  render() {\r\n    const onClose = this.props.onClose;\r\n    const children = this.props.children;\r\n    return (\r\n      <div className='modalOverlay'>\r\n        <dialog open>\r\n          <span onClick={() => this.handleClose(onClose)} className=\"modalDialogClose\">x</span>  \r\n          {children}\r\n        </dialog>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ModalDialog from './ModalDialog';\r\nimport './TileTodoItem.css';\r\nimport EditTodoItem from \"./EditTodoItem\";\r\n\r\nexport default class TileTodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dragStart: false,\r\n      showModal: false\r\n    }\r\n    this.handleDragStart = this.handleDragStart.bind(this);\r\n    this.handleDragOver = this.handleDragOver.bind(this);\r\n    this.handleDragEnter = this.handleDragEnter.bind(this);\r\n    this.handleDragLeave = this.handleDragLeave.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleDragEnd = this.handleDragEnd.bind(this);\r\n    this.handleEditItem = this.handleEditItem.bind(this);\r\n    this.handleSubmitEditItem = this.handleSubmitEditItem.bind(this);\r\n  }\r\n\r\n  handleDragStart(e, todoItem) {\r\n    console.log('handleDragStart', todoItem.id);\r\n    this.setState({\r\n      dragStart: true\r\n    });\r\n    e.dataTransfer.setData('id', todoItem.id);\r\n  }\r\n\r\n  handleDragOver(e) {\r\n    if (e.preventDefault) {\r\n      e.preventDefault();\r\n    }\r\n    e.dataTransfer.dropEffect = 'move';\r\n    return false;\r\n  }\r\n\r\n  handleDragEnter() {\r\n    this.setState({\r\n      over: true\r\n    })\r\n  }\r\n  \r\n  handleDragLeave() {\r\n    this.setState({\r\n      over: false\r\n    })\r\n  }\r\n\r\n  handleDrop(e, todoItem, callback) {\r\n    if (e.stopPropagation) {\r\n      e.stopPropagation();\r\n    }\r\n    const droppedItemId = parseInt(e.dataTransfer.getData('id'));\r\n\r\n    if (todoItem.id !== droppedItemId && callback) { \r\n      callback(droppedItemId, todoItem.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleDragEnd(e) {\r\n    this.setState({\r\n      dragStart: false\r\n    });\r\n  }\r\n\r\n  handleEditItem() {\r\n    this.setState({\r\n      showModal: true\r\n    });\r\n  }\r\n\r\n  handleCloseEditItem() {\r\n    this.setState({\r\n      showModal: false\r\n    });\r\n  }\r\n\r\n  handleSubmitEditItem(item, callback) {\r\n    callback(item);\r\n    this.handleCloseEditItem();\r\n  }\r\n\r\n  render() {\r\n    const todoItem = this.props.todoItem;\r\n    const onRemoveItem = this.props.onRemoveItem;\r\n    const onDropItem = this.props.onDropItem;\r\n    const onEditItem = this.props.onEditItem;\r\n    const todoItemClasses = ['TodoItem'];\r\n    const showModal = this.state.showModal;\r\n\r\n    this.state.dragStart && todoItemClasses.push('dragStart');\r\n    this.state.over && todoItemClasses.push('over');\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {showModal &&\r\n            <ModalDialog onClose={() => this.handleCloseEditItem()}>\r\n              <EditTodoItem \r\n                formTitle='Edit Item' \r\n                todoItem={todoItem}\r\n                onSubmitItem = {(item) => this.handleSubmitEditItem(item, onEditItem)}\r\n              ></EditTodoItem>\r\n            </ModalDialog>}\r\n        <li \r\n          draggable className={todoItemClasses.join(' ')}\r\n          onDragStart={(e) => this.handleDragStart(e, todoItem)}\r\n          onDragOver={this.handleDragOver}\r\n          onDragEnter={this.handleDragEnter}\r\n          onDragLeave={this.handleDragLeave}\r\n          onDrop={(e) => this.handleDrop(e, todoItem, onDropItem)}\r\n          onDragEnd={this.handleDragEnd}\r\n          >\r\n            <kbd className='status'>{todoItem.status}</kbd>\r\n            <span onClick={() => onRemoveItem(todoItem.id)} className=\"TodoClose\">x</span>\r\n            <span onClick={() => this.handleEditItem()}>...</span>\r\n            <div className='body'>\r\n              <h4><b>{todoItem.title}</b></h4>\r\n              <p>{todoItem.description}</p> \r\n            </div>\r\n            \r\n        </li>\r\n      </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport EditTodoItem from \"./EditTodoItem\";\r\nimport TileTodoItem from \"./TileTodoItem\";\r\nimport './TodoList.css';\r\n\r\nexport default class TodoList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      items: [{\r\n        id: 1,\r\n        title: 'title 1',\r\n        description: 'description 1',\r\n        status: 'open'\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'title 2',\r\n        description: 'description 2',\r\n        status: 'close'\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'title 3',\r\n        description: 'description 3',\r\n        status: 'open'\r\n      }]\r\n    }\r\n    this.addItemHandle = this.addItemHandle.bind(this);\r\n    this.removeItemHandle = this.removeItemHandle.bind(this);\r\n    this.dropItemHandle = this.dropItemHandle.bind(this);\r\n    this.editItemHandle = this.editItemHandle.bind(this);\r\n  }\r\n\r\n  addItemHandle(item) {\r\n    this.setState({\r\n      items: this.state.items.concat([item])\r\n    });\r\n  }\r\n    \r\n  editItemHandle(todoItem) {\r\n    const todoItemPosition = this.state.items.findIndex((item) => item.id === todoItem.id);\r\n    this.state.items.splice(todoItemPosition, 1, todoItem);\r\n    this.setState({\r\n      items: [].concat(this.state.items)\r\n    });\r\n  }\r\n\r\n  removeItemHandle(id) {\r\n    this.setState({\r\n      items: this.state.items.filter((item) => item.id !== id)\r\n    });\r\n  }\r\n\r\n  dropItemHandle(droppedItemId, droppedOnItemId) {\r\n    const toPosition = this.state.items.findIndex((item) => item.id === droppedOnItemId);\r\n    const fromPosition = this.state.items.findIndex((item) => item.id === droppedItemId);\r\n    this.state.items.splice(toPosition, 0, this.state.items.splice(fromPosition, 1)[0]);\r\n    this.setState({\r\n      items: [].concat(this.state.items)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const todoItems = this.state.items.map((todoItem) => \r\n      <TileTodoItem \r\n        onDropItem={this.dropItemHandle} \r\n        onRemoveItem={this.removeItemHandle} \r\n        key={todoItem.id} \r\n        todoItem={todoItem}\r\n        onEditItem={this.editItemHandle}\r\n        >\r\n      </TileTodoItem>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"TodoList-header\">\r\n          <h2>ToDo List App</h2>\r\n        </div>\r\n        <div className=\"TodoList-body\">\r\n          <EditTodoItem formTitle='New Item' onSubmitItem={this.addItemHandle}></EditTodoItem>\r\n          <div>\r\n            <h3>Items</h3>\r\n            <ul className=\"TodoList-container\">\r\n              {todoItems}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport TodoList from \"./components/TodoList\";\nimport toastr from 'toastr'\nimport 'toastr/build/toastr.min.css'\n\nclass App extends Component {\n  constructor() {\n    super();\n    toastr.options = {\n      positionClass : 'toast-top-full-width',\n      hideDuration: 300,\n      timeOut: 10000\n    }\n    toastr.clear();\n  }\n\n  render() {\n    return (\n      <div>\n        <TodoList></TodoList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}