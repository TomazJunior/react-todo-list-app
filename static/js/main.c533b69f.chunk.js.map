{"version":3,"sources":["components/EditTodoItem.js","components/ModalDialog.js","components/TodoItem.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["EditTodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","todoItem","state","objectSpread","formValid","title","description","handleSubmit","bind","assertThisInitialized","handleDescriptionTextChange","handleTitleTextChange","e","setState","target","value","_validateData","formTitle","react_default","a","createElement","onSubmit","className","htmlFor","name","onChange","disabled","type","item","id","uuid","v4","onSubmitItem","_resetFields","_isFormValid","preventDefault","Component","ModalDialog","handleClose","onClose","_this2","children","open","onClick","TodoItem","dragStart","showModal","handleDragStart","handleDragOver","handleDragEnter","handleDragLeave","handleDrop","handleDragEnd","handleEditItem","handleSubmitEditItem","console","log","dataTransfer","setData","dropEffect","over","callback","stopPropagation","droppedItemId","parseInt","getData","handleCloseEditItem","onRemoveItem","onDropItem","onEditItem","todoItemClasses","push","Fragment","ModalDialog_ModalDialog","EditTodoItem_EditTodoItem","draggable","join","onDragStart","onDragOver","onDragEnter","onDragLeave","onDrop","onDragEnd","TodoList","items","addItemHandle","removeItemHandle","dropItemHandle","editItemHandle","concat","todoItemPosition","findIndex","splice","filter","droppedOnItemId","toPosition","fromPosition","todoItems","map","TodoItem_TodoItem","key","App","toastr","options","positionClass","hideDuration","timeOut","clear","TodoList_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c533b69f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport uuid from \"uuid\";\r\nimport \"./EditTodoItem.css\";\r\n\r\nexport default class EditTodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.todoItem) {\r\n      this.state = {\r\n        ...props.todoItem,\r\n        formValid: true\r\n      };\r\n    } else {\r\n      this.state = {\r\n        title: '',\r\n        description: '',\r\n      };\r\n    }\r\n    \r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleDescriptionTextChange = this.handleDescriptionTextChange.bind(this);\r\n    this.handleTitleTextChange = this.handleTitleTextChange.bind(this);\r\n  }\r\n\r\n  handleDescriptionTextChange(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n    this._validateData();\r\n  }\r\n\r\n  handleTitleTextChange(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n    this._validateData();\r\n  }\r\n\r\n  _resetFields() {\r\n    this.setState({\r\n      description: '',\r\n      title: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const description = this.state.description;\r\n    const title = this.state.title;\r\n    const formTitle = this.props.formTitle;\r\n    return (  \r\n      <form onSubmit={this.handleSubmit}>\r\n        <fieldset>\r\n          <legend>{formTitle}</legend>\r\n          <p>\r\n            <label className=\"field\" htmlFor=\"Title\"><span>*</span>Title:</label>\r\n            <input\r\n              name=\"Title\"\r\n              value={title} \r\n              onChange={this.handleTitleTextChange}\r\n            />\r\n          </p>\r\n          <p>\r\n            <label className=\"field\" htmlFor=\"Description\"><span>*</span>Description:</label>\r\n            <input\r\n              name=\"Description\"\r\n              value={description} \r\n              onChange={this.handleDescriptionTextChange}\r\n            />\r\n          </p>\r\n          <button disabled={!this.state.formValid} type=\"submit\">Save</button>\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    debugger;\r\n    const item = {\r\n      id: uuid.v4(),\r\n      ...this.state\r\n    };\r\n    this.props.onSubmitItem(item);\r\n    this._resetFields();\r\n    this._isFormValid(false);\r\n    e.preventDefault();\r\n  }\r\n\r\n  _isFormValid(formValid) {\r\n    this.setState({\r\n      formValid\r\n    });\r\n  }\r\n\r\n  _validateData() {\r\n    if (!this.state.title || !this.state.description) { \r\n      this._isFormValid(false);\r\n    } else {\r\n      this._isFormValid(true);\r\n    }\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport './ModalDialog.css';\r\nexport default class ModalDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  handleClose(onClose) {\r\n    onClose();\r\n  }\r\n\r\n  render() {\r\n    const onClose = this.props.onClose;\r\n    const children = this.props.children;\r\n    return (\r\n      <div className='modalOverlay'>\r\n        <dialog open>\r\n          <span onClick={() => this.handleClose(onClose)} className=\"modalDialogClose\">x</span>  \r\n          {children}\r\n        </dialog>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ModalDialog from './ModalDialog';\r\nimport './TodoItem.css';\r\nimport EditTodoItem from \"./EditTodoItem\";\r\n\r\nexport default class TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dragStart: false,\r\n      showModal: false\r\n    }\r\n    this.handleDragStart = this.handleDragStart.bind(this);\r\n    this.handleDragOver = this.handleDragOver.bind(this);\r\n    this.handleDragEnter = this.handleDragEnter.bind(this);\r\n    this.handleDragLeave = this.handleDragLeave.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleDragEnd = this.handleDragEnd.bind(this);\r\n    this.handleEditItem = this.handleEditItem.bind(this);\r\n    this.handleSubmitEditItem = this.handleSubmitEditItem.bind(this);\r\n  }\r\n\r\n  handleDragStart(e, todoItem) {\r\n    console.log('handleDragStart', todoItem.id);\r\n    this.setState({\r\n      dragStart: true\r\n    });\r\n    e.dataTransfer.setData('id', todoItem.id);\r\n  }\r\n\r\n  handleDragOver(e) {\r\n    if (e.preventDefault) {\r\n      e.preventDefault();\r\n    }\r\n    e.dataTransfer.dropEffect = 'move';\r\n    return false;\r\n  }\r\n\r\n  handleDragEnter() {\r\n    this.setState({\r\n      over: true\r\n    })\r\n  }\r\n  \r\n  handleDragLeave() {\r\n    this.setState({\r\n      over: false\r\n    })\r\n  }\r\n\r\n  handleDrop(e, todoItem, callback) {\r\n    if (e.stopPropagation) {\r\n      e.stopPropagation();\r\n    }\r\n    const droppedItemId = parseInt(e.dataTransfer.getData('id'));\r\n\r\n    if (todoItem.id !== droppedItemId && callback) { \r\n      callback(droppedItemId, todoItem.id);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleDragEnd(e) {\r\n    this.setState({\r\n      dragStart: false\r\n    });\r\n  }\r\n\r\n  handleEditItem() {\r\n    this.setState({\r\n      showModal: true\r\n    });\r\n  }\r\n\r\n  handleCloseEditItem() {\r\n    this.setState({\r\n      showModal: false\r\n    });\r\n  }\r\n\r\n  handleSubmitEditItem(item, callback) {\r\n    callback(item);\r\n    this.handleCloseEditItem();\r\n  }\r\n\r\n  render() {\r\n    const todoItem = this.props.todoItem;\r\n    const onRemoveItem = this.props.onRemoveItem;\r\n    const onDropItem = this.props.onDropItem;\r\n    const onEditItem = this.props.onEditItem;\r\n    const todoItemClasses = ['TodoItem'];\r\n    const showModal = this.state.showModal;\r\n\r\n    this.state.dragStart && todoItemClasses.push('dragStart');\r\n    this.state.over && todoItemClasses.push('over');\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {showModal &&\r\n            <ModalDialog onClose={() => this.handleCloseEditItem()}>\r\n              <EditTodoItem \r\n                formTitle='Edit Item' \r\n                todoItem={todoItem}\r\n                onSubmitItem = {(item) => this.handleSubmitEditItem(item, onEditItem)}\r\n              ></EditTodoItem>\r\n            </ModalDialog>}\r\n        <li \r\n          draggable className={todoItemClasses.join(' ')}\r\n          onDragStart={(e) => this.handleDragStart(e, todoItem)}\r\n          onDragOver={this.handleDragOver}\r\n          onDragEnter={this.handleDragEnter}\r\n          onDragLeave={this.handleDragLeave}\r\n          onDrop={(e) => this.handleDrop(e, todoItem, onDropItem)}\r\n          onDragEnd={this.handleDragEnd}\r\n          >\r\n\r\n            <span onClick={() => onRemoveItem(todoItem.id)} className=\"TodoClose\">x</span>\r\n            <span onClick={() => this.handleEditItem()}>...</span>\r\n            <h4><b>{todoItem.title}</b></h4>\r\n            <p>{todoItem.description}</p> \r\n        </li>\r\n      </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport EditTodoItem from \"./EditTodoItem\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport './TodoList.css';\r\n\r\nexport default class TodoList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      items: []\r\n    }\r\n    this.addItemHandle = this.addItemHandle.bind(this);\r\n    this.removeItemHandle = this.removeItemHandle.bind(this);\r\n    this.dropItemHandle = this.dropItemHandle.bind(this);\r\n    this.editItemHandle = this.editItemHandle.bind(this);\r\n  }\r\n\r\n  addItemHandle(item) {\r\n    this.setState({\r\n      items: this.state.items.concat([item])\r\n    });\r\n  }\r\n    \r\n  editItemHandle(todoItem) {\r\n    const todoItemPosition = this.state.items.findIndex((item) => item.id === todoItem.id);\r\n    this.state.items.splice(todoItemPosition, 1, todoItem);\r\n    this.setState({\r\n      items: [].concat(this.state.items)\r\n    });\r\n  }\r\n\r\n  removeItemHandle(id) {\r\n    this.setState({\r\n      items: this.state.items.filter((item) => item.id !== id)\r\n    });\r\n  }\r\n\r\n  dropItemHandle(droppedItemId, droppedOnItemId) {\r\n    const toPosition = this.state.items.findIndex((item) => item.id === droppedOnItemId);\r\n    const fromPosition = this.state.items.findIndex((item) => item.id === droppedItemId);\r\n    this.state.items.splice(toPosition, 0, this.state.items.splice(fromPosition, 1)[0]);\r\n    this.setState({\r\n      items: [].concat(this.state.items)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const todoItems = this.state.items.map((todoItem) => \r\n      <TodoItem \r\n        onDropItem={this.dropItemHandle} \r\n        onRemoveItem={this.removeItemHandle} \r\n        key={todoItem.id} \r\n        todoItem={todoItem}\r\n        onEditItem={this.editItemHandle}\r\n        >\r\n      </TodoItem>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"TodoList-header\">\r\n          <h2>ToDo List App</h2>\r\n        </div>\r\n        <div className=\"TodoList-body\">\r\n          <EditTodoItem formTitle='New Item' onSubmitItem={this.addItemHandle}></EditTodoItem>\r\n          <div>\r\n            <h3>Items</h3>\r\n            <ul className=\"TodoList-container\">\r\n              {todoItems}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport TodoList from \"./components/TodoList\";\nimport toastr from 'toastr'\nimport 'toastr/build/toastr.min.css'\n\nclass App extends Component {\n  constructor() {\n    super();\n    toastr.options = {\n      positionClass : 'toast-top-full-width',\n      hideDuration: 300,\n      timeOut: 10000\n    }\n    toastr.clear();\n  }\n\n  render() {\n    return (\n      <div>\n        <TodoList></TodoList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}